{"ast":null,"code":"var _jsxFileName = \"/Users/k3h0j8/Desktop/Brave-Souls/client/src/components/EditProjectModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './EditProjectModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditProjectModal({\n  project,\n  isOpen,\n  onSave,\n  onCancel\n}) {\n  _s();\n  const [editedProject, setEditedProject] = useState({\n    ...project\n  });\n  useEffect(() => {\n    setEditedProject({\n      ...project\n    });\n  }, [project, isOpen]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditedProject(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  return isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: editedProject.title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"contents\",\n        value: editedProject.contents,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onSave(editedProject),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this) : null;\n}\n_s(EditProjectModal, \"bnBM8xWE8du91csD3fLnBf1nUQg=\");\n_c = EditProjectModal;\nexport default EditProjectModal;\nvar _c;\n$RefreshReg$(_c, \"EditProjectModal\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EditProjectModal","project","isOpen","onSave","onCancel","_s","editedProject","setEditedProject","handleChange","e","name","value","target","prev","className","children","type","title","onChange","fileName","_jsxFileName","lineNumber","columnNumber","contents","onClick","_c","$RefreshReg$"],"sources":["/Users/k3h0j8/Desktop/Brave-Souls/client/src/components/EditProjectModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './EditProjectModal.css';\n\nfunction EditProjectModal({ project, isOpen, onSave, onCancel }) {\n    const [editedProject, setEditedProject] = useState({ ...project });\n  \n    useEffect(() => {\n      setEditedProject({ ...project });\n    }, [project, isOpen]);\n  \n    const handleChange = (e) => {\n      const { name, value } = e.target;\n      setEditedProject(prev => ({ ...prev, [name]: value }));\n    };\n  \n    return isOpen ? (\n      <div className=\"modal-overlay\">\n        <div className=\"modal\">\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={editedProject.title}\n            onChange={handleChange}\n          />\n          <textarea\n            name=\"contents\"\n            value={editedProject.contents}\n            onChange={handleChange}\n          />\n          {/* Additional fields as needed */}\n          <button onClick={() => onSave(editedProject)}>Save</button>\n          <button onClick={onCancel}>Cancel</button>\n        </div>\n      </div>\n    ) : null;\n  }\n\n  export default EditProjectModal;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,gBAAgBA,CAAC;EAAEC,OAAO;EAAEC,MAAM;EAAEC,MAAM;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC7D,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC;IAAE,GAAGK;EAAQ,CAAC,CAAC;EAElEJ,SAAS,CAAC,MAAM;IACdU,gBAAgB,CAAC;MAAE,GAAGN;IAAQ,CAAC,CAAC;EAClC,CAAC,EAAE,CAACA,OAAO,EAAEC,MAAM,CAAC,CAAC;EAErB,MAAMM,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCL,gBAAgB,CAACM,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACH,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;EACxD,CAAC;EAED,OAAOT,MAAM,gBACXH,OAAA;IAAKe,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5BhB,OAAA;MAAKe,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpBhB,OAAA;QACEiB,IAAI,EAAC,MAAM;QACXN,IAAI,EAAC,OAAO;QACZC,KAAK,EAAEL,aAAa,CAACW,KAAM;QAC3BC,QAAQ,EAAEV;MAAa;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACFvB,OAAA;QACEW,IAAI,EAAC,UAAU;QACfC,KAAK,EAAEL,aAAa,CAACiB,QAAS;QAC9BL,QAAQ,EAAEV;MAAa;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eAEFvB,OAAA;QAAQyB,OAAO,EAAEA,CAAA,KAAMrB,MAAM,CAACG,aAAa,CAAE;QAAAS,QAAA,EAAC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3DvB,OAAA;QAAQyB,OAAO,EAAEpB,QAAS;QAAAW,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC,GACJ,IAAI;AACV;AAACjB,EAAA,CAhCML,gBAAgB;AAAAyB,EAAA,GAAhBzB,gBAAgB;AAkCvB,eAAeA,gBAAgB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}