{"ast":null,"code":"var _jsxFileName = \"/Users/k3h0j8/Desktop/Brave-Souls/client/src/components/Toast.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Toast.css';\nimport { Check } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Toast({\n  show,\n  message\n}) {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n  useEffect(() => {\n    let fadeOutTimeout;\n    if (show) {\n      setIsVisible(true); // Immediately show the toast\n\n      // After 30 seconds, start the fade-out process\n      fadeOutTimeout = setTimeout(() => {\n        setIsVisible(false); // Trigger the fade-out process\n      }, 30500); // Adjust this duration to 30 seconds + fade-out duration\n    }\n\n    // Cleanup timeout on component unmount\n    return () => {\n      clearTimeout(fadeOutTimeout);\n    };\n  }, [show]);\n\n  // Additional useEffect to handle component removal after fade-out\n  useEffect(() => {\n    let removeTimeout;\n    if (!isVisible) {\n      // Wait for the fade-out animation to complete before setting `show` to false\n      removeTimeout = setTimeout(() => {\n        // Additional logic or state updates to remove the toast can be placed here\n      }, 500); // Corresponds to the fade-out animation duration\n    }\n    return () => clearTimeout(removeTimeout);\n  }, [isVisible]);\n  if (!show || !isVisible) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `toast ${!isVisible ? 'fade-out' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(Check, {\n      className: \"toast-icon\",\n      size: 24,\n      color: \"#4CAF50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"toast-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toast-view-button\",\n      children: \"View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Toast, \"nsCiLtF5Y1+XM2+DHz+VedU//yk=\");\n_c = Toast;\nexport default Toast;\nvar _c;\n$RefreshReg$(_c, \"Toast\");","map":{"version":3,"names":["React","useEffect","useState","Check","jsxDEV","_jsxDEV","Toast","show","message","_s","isVisible","setIsVisible","fadeOutTimeout","setTimeout","clearTimeout","removeTimeout","className","children","size","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/k3h0j8/Desktop/Brave-Souls/client/src/components/Toast.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Toast.css';\nimport { Check } from 'lucide-react';\n\nfunction Toast({ show, message }) {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    let fadeOutTimeout;\n    if (show) {\n      setIsVisible(true); // Immediately show the toast\n\n      // After 30 seconds, start the fade-out process\n      fadeOutTimeout = setTimeout(() => {\n        setIsVisible(false); // Trigger the fade-out process\n      }, 30500); // Adjust this duration to 30 seconds + fade-out duration\n    }\n\n    // Cleanup timeout on component unmount\n    return () => {\n      clearTimeout(fadeOutTimeout);\n    };\n  }, [show]);\n\n  // Additional useEffect to handle component removal after fade-out\n  useEffect(() => {\n    let removeTimeout;\n    if (!isVisible) {\n      // Wait for the fade-out animation to complete before setting `show` to false\n      removeTimeout = setTimeout(() => {\n        // Additional logic or state updates to remove the toast can be placed here\n      }, 500); // Corresponds to the fade-out animation duration\n    }\n\n    return () => clearTimeout(removeTimeout);\n  }, [isVisible]);\n\n  if (!show || !isVisible) {\n    return null;\n  }\n\n  return (\n    <div className={`toast ${!isVisible ? 'fade-out' : ''}`}>\n      <Check className=\"toast-icon\" size={24} color=\"#4CAF50\" />\n      <span className=\"toast-message\">{message}</span>\n      <button className=\"toast-view-button\">View</button>\n    </div>\n  );\n}\n\nexport default Toast;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,aAAa;AACpB,SAASC,KAAK,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,KAAKA,CAAC;EAAEC,IAAI;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACd,IAAIW,cAAc;IAClB,IAAIL,IAAI,EAAE;MACRI,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;;MAEpB;MACAC,cAAc,GAAGC,UAAU,CAAC,MAAM;QAChCF,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;MACvB,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;IACb;;IAEA;IACA,OAAO,MAAM;MACXG,YAAY,CAACF,cAAc,CAAC;IAC9B,CAAC;EACH,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;;EAEV;EACAN,SAAS,CAAC,MAAM;IACd,IAAIc,aAAa;IACjB,IAAI,CAACL,SAAS,EAAE;MACd;MACAK,aAAa,GAAGF,UAAU,CAAC,MAAM;QAC/B;MAAA,CACD,EAAE,GAAG,CAAC,CAAC,CAAC;IACX;IAEA,OAAO,MAAMC,YAAY,CAACC,aAAa,CAAC;EAC1C,CAAC,EAAE,CAACL,SAAS,CAAC,CAAC;EAEf,IAAI,CAACH,IAAI,IAAI,CAACG,SAAS,EAAE;IACvB,OAAO,IAAI;EACb;EAEA,oBACEL,OAAA;IAAKW,SAAS,EAAG,SAAQ,CAACN,SAAS,GAAG,UAAU,GAAG,EAAG,EAAE;IAAAO,QAAA,gBACtDZ,OAAA,CAACF,KAAK;MAACa,SAAS,EAAC,YAAY;MAACE,IAAI,EAAE,EAAG;MAACC,KAAK,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1DlB,OAAA;MAAMW,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAET;IAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAChDlB,OAAA;MAAQW,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAC;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV;AAACd,EAAA,CA5CQH,KAAK;AAAAkB,EAAA,GAALlB,KAAK;AA8Cd,eAAeA,KAAK;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}